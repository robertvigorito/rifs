

# Create a python version ac
name: build/test
on: [push]
jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: &python-version ["3.10", "3.11", "3.12"]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install poetry
  #       poetry install
  #   - name: Analysing the code with pylint
  #     run: |
  #       poetry run pylint `git ls-files '*.py'`


# Get a build and test working with makefile
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v3
    # Install make
    - name: Install make
      run: sudo apt-get install make
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        make build
  # Run the make test command
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    # Install make
    - name: Install make
      run: sudo apt-get install make || echo "make already installed"
    - name: Run tests
      run: |
        pip install poetry
        make test